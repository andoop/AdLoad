apply plugin: 'com.android.library'

android {
    compileSdkVersion 24
    buildToolsVersion "24.0.2"

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 24
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:24.2.1'
    testCompile 'junit:junit:4.12'
    compile project(':adload')
    compile project(':adloadcomponents')
}



//dx.bar路径，修改为本机对应路径
def dxpath='D:/Android/sdk/build-tools/23.0.2'
def execdex = {->
    try{
        exec {
            commandLine dxpath+'/dx.bat','--dex','--output=outjars/test.jar','build/libs/adloadplugina.jar'

        }

    }
    catch (ignored){
        println ignored
    }
}

task makedir(){
    if(!file("outjars").exists()){
        println 'mkdir outjars file dir'
        file("outjars").mkdir();
    }else {
        println 'outjars already exists'
    }
}

task buildjar (dependsOn: ['compileReleaseJavaWithJavac'],type: Jar) {
    from (project.buildDir.toString()+'/intermediates/classes/release')
    from "../adloadcomponents/build/intermediates/classes/release"

    //去除路径集下部分的资源
    exclude "**/R.class"
    exclude "**/R\$*.class"
    exclude "**/BuildConfig.class"
    exclude "**/BuildConfig\$*.class"
}

//dx编译
task builddex(dependsOn:['makedir','buildjar']){
    println 'dx dealwith jar'
    execdex();
}

